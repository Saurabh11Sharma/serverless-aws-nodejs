service: auction-service

plugins:
  - serverless-offline
  - serverless-localstack

useDotenv: true

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ${env:AWS_REGION, 'us-east-1'}
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.auctionsTable}
  iam:
    role:
      statements:
        - Effect: Allow
          Action: dynamodb:*
          Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.auctionsTable}

resources:
  Resources:
    AuctionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.auctionsTable}
        AttributeDefinitions:
          - { AttributeName: id, AttributeType: S }
          - { AttributeName: status, AttributeType: S }
          - { AttributeName: endDate, AttributeType: N }
        KeySchema:
          - { AttributeName: id, KeyType: HASH }
        GlobalSecondaryIndexes:
          - IndexName: statusAndEndDate
            KeySchema:
              - { AttributeName: status, KeyType: HASH }
              - { AttributeName: endDate, KeyType: RANGE }
            Projection:
              ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: post
          path: /auction
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: get
          path: /auctions
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: get
          path: /auction/{id}
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: patch
          path: /auction/{id}/bid
  processAuctions:
    handler: src/handlers/processAuctions.handler
    events:
      - schedule:
          rate: rate(1 minute)

custom:
  auctionsTable: AuctionsTable
  localstack:
    stages: [local]
    autostart: true
    endpoints:
      DynamoDB: ${env:DYNAMODB_ENDPOINT, 'http://localhost:4566'}